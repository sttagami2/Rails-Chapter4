20200305
〜第4章〜

◆学習の目標
　・M(Model)と「データベース」について学んでいく
　3章ではMVCのVC(View, Controller)と、Viewのデータをブラウザに表示する流れを学習した
　↑これではまだ「静的サイト」　→ アプリケーションではない

◆4章の目次
　・モデルとは
　・データベースとは
　・テーブルの構造
　　・レコードとカラム
　　・Railsテーブルの特徴
　　・モデルはDBとのやり取りを簡単にしてくれる

　・モデルを作成する
　　・生成されるファイル
　　・マイグレーションファイルとは
　　・マイグレーションファイルを編集する

　・カラムの追加 / 削除の方法

ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー
モデルとは
・モデル：アプリケーション固有のデータや処理を扱う部分。
・データベースにアクセスして、データの登録や取得、更新、削除などの処理が行われている
・app → modelsディレクトリ内にある「モデル名.rb」がモデルのファイル
・モデルはデータベースと常にやり取りをしている
https://web-camp.online/uploads/contents/131/2.png

ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー
ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー
データベースとは
・データを格納する保存先
・データを効率的に保存したり、高速で検索できるようになる
・アプリケーションが利用するには、一定の規則に基づいてデータを整理しておく必要がある
https://s3-ap-northeast-1.amazonaws.com/wals/uploads/wals2_content_img/21/131/table.png
・テーブルを利用することで、情報が整理され、取り出しやすくなる


ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー
ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー
レコードの構造





ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー
ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー
レコードとカラム
縦：カラム
横：レコード
全体：テーブル




ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー
ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー
Railsテーブルの特徴
・Railsでテーブルを作成するとid番号が順番に割り振られる
・Modelはデータベースとのやり取りを簡単にしてくるれうる
　→ データベースとデータのやり取りするには、SQLでアクセスする必要がある

ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー
ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー
モデルを作成する
今回は「List」という名前のブログ投稿用モデルを作成していく

モデルを作成するには下記のコードをターミナルに記述
	$ rails g model モデル名
今回のモデル名は「List」なので・・・
	$ rails g model List

コードを実行すると色々なファイルが生成される
ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー
ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー
生成されるファイル
・db/migrate/(作成日時)_create_lists.rb：マイグレーションファイルというデータベースの設計図になるファイル
・test/models/list.rb：モデルクラスはデータベースに対応したRubyクラス
・test/models/list_test.rb：モデルクラスのテストコードのひな形
・test/fixtures/lists.yml：テストデータ作成のためのひな形

「(作成日時)_create_lists.rb」ファイルのことを「マイグレーションファイルという」


ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー
ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー
マイグレーションファイルとは
・テーブルの作成や変更を管理するファイル
・このファイルに記述される内容によって、テーブル名やカラム名、テーブルの列などが決まる



ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー
ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー
モデルとテーブルのつながりは「モデル名」で決まる
・情報はテーブルに保存される
・テーブルに保存された情報を引き出すのは、そのテーブルに対応するモデル
・どのテーブルとモデルが関連づけられているかは、名前によって判断される
→このため、Railsでは、命名の規則が厳密に決められている


ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー
ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー
モデルの命名規則
・モデル名　→ 単数形、先頭は英大文字		例：List
・モデルのファイル名　→ 単数形、先頭は英小文字	例：list.rb
・テーブル名　→ 複数形、先頭は英小文字		例：lists



ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー
ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー
マイグレーションファイルを編集する
自動生成されたマイグレーションファイルに、テーブルの内容を書いていく

「db/migrate_(作成日時)_create_lists.rb」ファイルを開いて中身を確認する

	def change
		create_table：テーブル名 do |t|
			t.データ型：カラム名
		end
	end
今回はブログ投稿を仮定しているため、以下のカラムを定義する
・title
・body

	def change
		create_table :lists do |t|
			t.string :title
			t.string :body
			t.tomestamps




ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー
ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー
マイグレーションでデータベースへ反映する
上記までで、カラムの定義が完了
しかし、まだテーブルは作成できていない！

◆マイグレーションファイルからテーブルを作成するコマンド
	$ rails db:migrate

ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー
ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー
カラムの追加 / 削除の方法
・新たに別のカラムを追加したい場合
・誤った名前でカラムを追加してしまった場合

◆カラムの追加
	$ rails g migration Addカラム名Toテーブル名 カラム名：型名
例えば、「lists」テーブルに文字列型の「name」というカラムを追加したい場合は以下のようになる
	$ rails g migration AddNameToLists name:string
	$ rails db:migrate

◆カラムの削除
	$ rails g migration Removeカラム名Fromテーブル名 カラム名:型名
たとえば、さきほど追加した「name」カラムを削除したい場合は、以下のようになります。
	$ rails g migration RemoveNameFromLists name:string
	$rails db:migrate
ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー


まとめ！
・「データベース」は、「テーブル」「カラム」「レコード」の3要素で構成されている。
　テーブル：表
　カラム：列
　レコード：行
　https://web-camp.online/uploads/contents/131/1.png

・モデルとテーブルは連動している。
　https://web-camp.online/uploads/contents/131/2.png

・マイグレーションファイルを使うと、テーブルを作成できる。
　
・マイグレーションファイルの作成や修正時は、必ず「rails db:migrate」で実行する。

・カラムは、追加や削除を行なえる。